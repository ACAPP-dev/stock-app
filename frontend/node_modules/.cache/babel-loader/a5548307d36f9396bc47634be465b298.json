{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/stocks-app/frontend/src/components/daily/DailyRows.js\";\nimport React from 'react';\n\nconst DailyRows = props => {\n  console.log('props in dailyrows: ', props);\n\n  const findChart = company => {\n    return company.charts.find(chart => chart.type === 'daily');\n  };\n\n  return props.watchlist.companies.map(company => {\n    const chart = findChart(company);\n\n    if (chart) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: company.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }), chart.chart_lines.map(day => {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }\n        }, day.close), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }\n        }, \"Need $ Change\"), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }\n        }, \"Need % Change\"));\n      }), /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }, \"Need total $ Change\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, \"Need total % Change\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 26\n        }\n      }, \"Blank Row\");\n    }\n  });\n};\n\nexport default DailyRows;","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/stocks-app/frontend/src/components/daily/DailyRows.js"],"names":["React","DailyRows","props","console","log","findChart","company","charts","find","chart","type","watchlist","companies","map","id","chart_lines","day","close"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;;AAEA,QAAMG,SAAS,GAAGC,OAAO,IAAI;AACzB,WAAOA,OAAO,CAACC,MAAR,CAAeC,IAAf,CAAoBC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAe,OAA5C,CAAP;AACH,GAFD;;AAIA,SAAOR,KAAK,CAACS,SAAN,CAAgBC,SAAhB,CAA0BC,GAA1B,CAA8BP,OAAO,IAAI;AAC5C,UAAMG,KAAK,GAAGJ,SAAS,CAACC,OAAD,CAAvB;;AACA,QAAIG,KAAJ,EAAW;AACP,0BACI;AAAI,QAAA,GAAG,EAAEH,OAAO,CAACQ,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKL,KAAK,CAACM,WAAN,CAAkBF,GAAlB,CAAsBG,GAAG,IAAI;AAC1B,4BACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,GAAG,CAACC,KAAT,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHA,CADJ;AAOH,OARA,CAFL,eAWI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFA,CAXJ,CADJ;AAoBH,KArBD,MAqBO;AAAE,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAR;AAA4B;AAGxC,GA1BM,CAAP;AA2BH,CAlCD;;AAoCA,eAAehB,SAAf","sourcesContent":["import React from 'react'\n\nconst DailyRows = props => {\n    console.log('props in dailyrows: ', props)\n    \n    const findChart = company => {\n        return company.charts.find(chart => chart.type === 'daily')\n    }\n\n    return props.watchlist.companies.map(company => {\n        const chart = findChart(company)\n        if (chart) {\n            return (\n                <tr key={company.id}>\n                    <td colSpan='3' />\n                    {chart.chart_lines.map(day => {\n                        return (\n                            <React.Fragment>\n                            <td>{day.close}</td>\n                            <td>Need $ Change</td>\n                            <td>Need % Change</td>\n                            </React.Fragment>\n                        )\n                    })}\n                    <React.Fragment>\n                    <td>Need total $ Change</td>\n                    <td>Need total % Change</td>\n                    </React.Fragment>\n                </tr>\n\n            )\n            \n        } else { return (<tr>Blank Row</tr>)}\n\n\n    })\n}\n\nexport default DailyRows"]},"metadata":{},"sourceType":"module"}