{"ast":null,"code":"function userReducer(state = {\n  name: \"\",\n  email: \"\",\n  id: \"\",\n  loggedIn: false,\n  watchlists: []\n}, action) {\n  console.log('State from userReducer:', state);\n  console.log('Action from userReducer:', action);\n  let watchlistIndex;\n  let watchlistCopy;\n  let newWatchlists;\n\n  switch (action.type) {\n    case 'LOGIN_USER':\n      const newUser = {\n        name: action.payload.name,\n        email: action.payload.email,\n        id: action.payload.id,\n        loggedIn: true,\n        watchlists: action.payload.watchlists\n      };\n      return { ...state,\n        ...newUser\n      };\n\n    case 'START_USER_LOGIN':\n      return state;\n\n    case 'START_ADD_WATCHLIST':\n      return state;\n\n    case 'ADD_WATCHLIST':\n      // debugger\n      return { ...state,\n        watchlists: action.payload\n      };\n\n    case 'REMOVE_WATCHLIST':\n      return { ...state,\n        watchlists: action.payload\n      };\n\n    case 'GET_WATCHLIST_DETAIL':\n      watchlistIndex = state.watchlists.findIndex(watchlist => watchlist.id === action.payload.id);\n      watchlistCopy = [...state.watchlists];\n      newWatchlists = watchlistCopy.splice(watchlistIndex, 1, action.payload); // debugger\n\n      return { ...state,\n        watchlists: watchlistCopy\n      };\n\n    case 'ADD_DAILY_DATA':\n      watchlistIndex = state.watchlists.findIndex(watchlist => watchlist.id === action.payload.id);\n      watchlistCopy = [...state.watchlists];\n      newWatchlists = watchlistCopy.splice(watchlistIndex, 1, action.payload); // debugger\n\n      return { ...state,\n        watchlists: watchlistCopy\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/stocks-app/frontend/src/reducers/userReducer.js"],"names":["userReducer","state","name","email","id","loggedIn","watchlists","action","console","log","watchlistIndex","watchlistCopy","newWatchlists","type","newUser","payload","findIndex","watchlist","splice"],"mappings":"AACA,SAASA,WAAT,CAAqBC,KAAK,GAAG;AACrBC,EAAAA,IAAI,EAAE,EADe;AAErBC,EAAAA,KAAK,EAAE,EAFc;AAGrBC,EAAAA,EAAE,EAAE,EAHiB;AAIrBC,EAAAA,QAAQ,EAAE,KAJW;AAKrBC,EAAAA,UAAU,EAAE;AALS,CAA7B,EAMWC,MANX,EAMmB;AACfC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCR,KAAvC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,MAAxC;AAEA,MAAIG,cAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,aAAJ;;AAEA,UAAQL,MAAM,CAACM,IAAf;AACI,SAAK,YAAL;AACI,YAAMC,OAAO,GAAG;AACZZ,QAAAA,IAAI,EAAEK,MAAM,CAACQ,OAAP,CAAeb,IADT;AAEZC,QAAAA,KAAK,EAAEI,MAAM,CAACQ,OAAP,CAAeZ,KAFV;AAGZC,QAAAA,EAAE,EAAEG,MAAM,CAACQ,OAAP,CAAeX,EAHP;AAIZC,QAAAA,QAAQ,EAAE,IAJE;AAKZC,QAAAA,UAAU,EAAEC,MAAM,CAACQ,OAAP,CAAeT;AALf,OAAhB;AAQA,aAAO,EAAC,GAAGL,KAAJ;AAAW,WAAGa;AAAd,OAAP;;AACJ,SAAK,kBAAL;AACI,aAAOb,KAAP;;AACJ,SAAK,qBAAL;AACI,aAAOA,KAAP;;AACJ,SAAK,eAAL;AACI;AACA,aAAO,EAAC,GAAGA,KAAJ;AAAWK,QAAAA,UAAU,EAAEC,MAAM,CAACQ;AAA9B,OAAP;;AACJ,SAAK,kBAAL;AACI,aAAO,EAAC,GAAGd,KAAJ;AAAWK,QAAAA,UAAU,EAAEC,MAAM,CAACQ;AAA9B,OAAP;;AAEJ,SAAK,sBAAL;AACIL,MAAAA,cAAc,GAAGT,KAAK,CAACK,UAAN,CAAiBU,SAAjB,CAA2BC,SAAS,IAAIA,SAAS,CAACb,EAAV,KAAiBG,MAAM,CAACQ,OAAP,CAAeX,EAAxE,CAAjB;AACAO,MAAAA,aAAa,GAAG,CAAC,GAAGV,KAAK,CAACK,UAAV,CAAhB;AACAM,MAAAA,aAAa,GAAGD,aAAa,CAACO,MAAd,CAAqBR,cAArB,EAAqC,CAArC,EAAwCH,MAAM,CAACQ,OAA/C,CAAhB,CAHJ,CAII;;AACA,aAAO,EAAC,GAAGd,KAAJ;AAAWK,QAAAA,UAAU,EAAEK;AAAvB,OAAP;;AAEJ,SAAK,gBAAL;AACID,MAAAA,cAAc,GAAGT,KAAK,CAACK,UAAN,CAAiBU,SAAjB,CAA2BC,SAAS,IAAIA,SAAS,CAACb,EAAV,KAAiBG,MAAM,CAACQ,OAAP,CAAeX,EAAxE,CAAjB;AACAO,MAAAA,aAAa,GAAG,CAAC,GAAGV,KAAK,CAACK,UAAV,CAAhB;AACAM,MAAAA,aAAa,GAAGD,aAAa,CAACO,MAAd,CAAqBR,cAArB,EAAqC,CAArC,EAAwCH,MAAM,CAACQ,OAA/C,CAAhB,CAHJ,CAII;;AACA,aAAO,EAAC,GAAGd,KAAJ;AAAWK,QAAAA,UAAU,EAAEK;AAAvB,OAAP;;AAGJ;AACI,aAAOV,KAAP;AArCR;AAuCH;;AAED,eAAeD,WAAf","sourcesContent":["\nfunction userReducer(state = {\n        name: \"\", \n        email: \"\", \n        id: \"\", \n        loggedIn: false,\n        watchlists: []\n        }, action) {\n    console.log('State from userReducer:', state)\n    console.log('Action from userReducer:', action)\n    \n    let watchlistIndex\n    let watchlistCopy\n    let newWatchlists\n\n    switch (action.type) {\n        case 'LOGIN_USER':\n            const newUser = {\n                name: action.payload.name, \n                email: action.payload.email,\n                id: action.payload.id,\n                loggedIn: true,\n                watchlists: action.payload.watchlists\n            }\n\n            return {...state, ...newUser}\n        case 'START_USER_LOGIN':\n            return state\n        case 'START_ADD_WATCHLIST':\n            return state\n        case 'ADD_WATCHLIST':\n            // debugger\n            return {...state, watchlists: action.payload}    \n        case 'REMOVE_WATCHLIST':\n            return {...state, watchlists: action.payload} \n\n        case 'GET_WATCHLIST_DETAIL':\n            watchlistIndex = state.watchlists.findIndex(watchlist => watchlist.id === action.payload.id)\n            watchlistCopy = [...state.watchlists]\n            newWatchlists = watchlistCopy.splice(watchlistIndex, 1, action.payload)\n            // debugger\n            return {...state, watchlists: watchlistCopy}\n\n        case 'ADD_DAILY_DATA':\n            watchlistIndex = state.watchlists.findIndex(watchlist => watchlist.id === action.payload.id)\n            watchlistCopy = [...state.watchlists]\n            newWatchlists = watchlistCopy.splice(watchlistIndex, 1, action.payload)\n            // debugger\n            return {...state, watchlists: watchlistCopy}\n            \n            \n        default:\n            return state\n    } \n}\n\nexport default userReducer"]},"metadata":{},"sourceType":"module"}