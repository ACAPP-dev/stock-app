{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/stocks-app/frontend/src/components/daily/DailyForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass DailyForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startDate: '2020-07-01',\n      endDate: '2020-07-09'\n    };\n\n    this.selectWatchlist = () => {\n      return /*#__PURE__*/React.createElement(DropdownButton, {\n        title: \"Select Watchlist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, this.props.user.watchlists.map(watchlist => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          onClick: () => {\n            this.addCompany(watchlist.id, this.props.data.ticker);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }\n        }, watchlist.name);\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Daily Form Component\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Daily Setup\"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, this.selectWatchlist), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"Start Date:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      onChange: this.handleChange,\n      name: \"startDate\",\n      value: this.state.startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"Start Date for Chart\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"End Date:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      onChange: this.handleChange,\n      name: \"endDate\",\n      value: this.state.endDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"End Date for Chart\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(DailyForm);","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/stocks-app/frontend/src/components/daily/DailyForm.js"],"names":["React","connect","Form","Dropdown","DropdownButton","Button","Row","Col","DailyForm","Component","state","startDate","endDate","selectWatchlist","props","user","watchlists","map","watchlist","addCompany","id","data","ticker","name","render","handleChange","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Form from 'react-bootstrap/Form'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass DailyForm extends React.Component {\n\n    state = {\n        startDate: '2020-07-01',\n        endDate: '2020-07-09'\n    }\n\n    selectWatchlist = () => {\n        \n            return (\n                <DropdownButton title=\"Select Watchlist\">\n                    {this.props.user.watchlists.map(watchlist => {\n                        return (<Dropdown.Item\n                            onClick={()=>{this.addCompany(watchlist.id, this.props.data.ticker)}}\n                            >{watchlist.name}</Dropdown.Item>)\n                    })}    \n                </DropdownButton>\n            )\n        }\n\n    render() {\n    return (\n        <div>\n        <h2>Daily Form Component</h2>\n        \n        <Form>\n            \n            \n            <Form.Group >\n                \n                <Form.Label>Daily Setup</Form.Label>\n                <Row>\n                    <Col>{this.selectWatchlist}</Col>    \n                    <Col>\n                        <Form.Label>Start Date:</Form.Label>\n                        <Form.Control type=\"date\" onChange={this.handleChange} name='startDate' value={this.state.startDate} />\n                        <Form.Text className='text-muted'>\n                            Start Date for Chart\n                        </Form.Text>\n                    </Col>\n                    <Col>\n                    <Form.Label>End Date:</Form.Label>\n                        <Form.Control type=\"date\" onChange={this.handleChange} name='endDate' value={this.state.endDate} />\n                        <Form.Text className='text-muted'>\n                            End Date for Chart\n                        </Form.Text>\n                    </Col>\n                </Row>\n            </Form.Group>\n            </Form>\n            </div>\n    )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user}\n}\nexport default connect(mapStateToProps)(DailyForm)"]},"metadata":{},"sourceType":"module"}