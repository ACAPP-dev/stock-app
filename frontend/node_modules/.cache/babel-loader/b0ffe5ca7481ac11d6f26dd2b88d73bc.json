{"ast":null,"code":"function fetchCompany(ticker) {\n  // from to in stock data is unix time from 6/1/20 to 6/15/20\n  // const FINNHUB_STOCK_DATA_URL = 'https://finnhub.io/api/v1/stock/candle?symbol=AAPL&resolution=D&from=1590969600&to=1592179200&token=bsfleivrh5rf14r5rh80'\n  const FINNHUB_COMPANY_DATA_URL = 'https://finnhub.io/api/v1/stock/profile2?symbol=';\n  const FINNHUB_BASIC_DATA_URL = 'https://finnhub.io/api/v1/stock/metric?symbol=';\n  const FINNHUB_API_KEY = '&token=bsfleivrh5rf14r5rh80';\n  let companyData = {};\n  let basicData = {};\n  return dispatch => {\n    dispatch({\n      type: 'START_COMPANY_FETCH'\n    }); // Get company and stock price data from API (2 fetches)\n\n    fetch(FINNHUB_COMPANY_DATA_URL + ticker + FINNHUB_API_KEY).then(resp => resp.json()).then(json => {\n      console.log(json);\n      return companyData = json;\n    });\n    fetch(FINNHUB_BASIC_DATA_URL + ticker + '&metric=price' + FINNHUB_API_KEY).then(resp => resp.json()).then(json => {\n      console.log(json.metric);\n      return basicData = json.metric;\n    }); // Persist company data to database\n\n    const loginObject = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    };\n    fetch('http://localhost:3000/companies', companyObject).then(resp => resp.json()).then(json => {\n      console.log('userlogin response: ', json);\n      return dispatch({\n        type: 'LOGIN_USER',\n        payload: json\n      });\n    });\n  };\n}\n\nexport default fetchCompany;","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/stocks-app/frontend/src/actions/fetchCompany.js"],"names":["fetchCompany","ticker","FINNHUB_COMPANY_DATA_URL","FINNHUB_BASIC_DATA_URL","FINNHUB_API_KEY","companyData","basicData","dispatch","type","fetch","then","resp","json","console","log","metric","loginObject","method","headers","body","JSON","stringify","formData","companyObject","payload"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AAG5B;AACF;AACA,QAAMC,wBAAwB,GAAG,kDAAjC;AACA,QAAMC,sBAAsB,GAAG,gDAA/B;AACA,QAAMC,eAAe,GAAG,6BAAxB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,SAAS,GAAG,EAAhB;AAEI,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR,CADe,CAGf;;AAEAC,IAAAA,KAAK,CAACP,wBAAwB,GAAGD,MAA3B,GAAoCG,eAArC,CAAL,CACCM,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEME,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aAAOP,WAAW,GAAGO,IAArB;AACH,KALD;AAOAH,IAAAA,KAAK,CAACN,sBAAsB,GAAGF,MAAzB,GAAkC,eAAlC,GAAoDG,eAArD,CAAL,CACCM,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEME,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAjB;AACA,aAAOT,SAAS,GAAGM,IAAI,CAACG,MAAxB;AACH,KALD,EAZe,CAmBf;;AAEA,UAAMC,WAAW,GAAG;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB,kBAAjB;AAAqC,kBAAU;AAA/C,OAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,QAAf;AAHU,KAApB;AAMAb,IAAAA,KAAK,CAAC,iCAAD,EAAoCc,aAApC,CAAL,CACCb,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEME,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,IAApC;AACA,aAAOL,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE,YAAP;AAAqBgB,QAAAA,OAAO,EAAEZ;AAA9B,OAAD,CAAf;AACH,KALD;AAMH,GAjCD;AAkCH;;AAED,eAAeZ,YAAf","sourcesContent":["function fetchCompany(ticker) {\n    \n  \n  // from to in stock data is unix time from 6/1/20 to 6/15/20\n// const FINNHUB_STOCK_DATA_URL = 'https://finnhub.io/api/v1/stock/candle?symbol=AAPL&resolution=D&from=1590969600&to=1592179200&token=bsfleivrh5rf14r5rh80'\nconst FINNHUB_COMPANY_DATA_URL = 'https://finnhub.io/api/v1/stock/profile2?symbol='\nconst FINNHUB_BASIC_DATA_URL = 'https://finnhub.io/api/v1/stock/metric?symbol='\nconst FINNHUB_API_KEY = '&token=bsfleivrh5rf14r5rh80'\nlet companyData = {}\nlet basicData = {}\n\n    return dispatch => {\n        dispatch({ type: 'START_COMPANY_FETCH'})\n        \n        // Get company and stock price data from API (2 fetches)\n\n        fetch(FINNHUB_COMPANY_DATA_URL + ticker + FINNHUB_API_KEY)\n        .then(resp => resp.json())\n        .then(json => {\n            console.log(json)\n            return companyData = json\n        })\n\n        fetch(FINNHUB_BASIC_DATA_URL + ticker + '&metric=price' + FINNHUB_API_KEY)\n        .then(resp => resp.json())\n        .then(json => {\n            console.log(json.metric)\n            return basicData = json.metric\n        })\n\n        // Persist company data to database\n\n        const loginObject = {\n            method: 'POST',\n            headers: {\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"},\n            body: JSON.stringify(formData)\n        }\n        \n        fetch('http://localhost:3000/companies', companyObject)\n        .then(resp => resp.json())\n        .then(json => {\n            console.log('userlogin response: ', json)\n            return dispatch({type: 'LOGIN_USER', payload: json})\n        })\n    }\n}\n\nexport default fetchCompany"]},"metadata":{},"sourceType":"module"}