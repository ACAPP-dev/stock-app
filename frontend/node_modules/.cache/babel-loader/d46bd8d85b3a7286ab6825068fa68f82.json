{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/stocks-app/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css'; // import candlestick chart components from amcharts.com below:\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated); // from to in stock data is unix time from 6/1/20 to 6/15/20\n\nconst FINNHUB_STOCK_DATA_URL = 'https://finnhub.io/api/v1/stock/candle?symbol=AAPL&resolution=D&from=1590969600&to=1592179200&token=bsfleivrh5rf14r5rh80';\nconst FINNHUB_API_KEY = 'bsfleivrh5rf14r5rh80';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.testChart = () => {\n      let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n      chart.paddingRight = 20;\n      let data = [];\n      let visits = 10;\n\n      for (let i = 1; i < 366; i++) {\n        visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n        data.push({\n          date: new Date(2018, 0, i),\n          name: \"name\" + i,\n          value: visits\n        });\n      }\n\n      chart.data = data;\n      console.log(chart.data);\n      let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n      dateAxis.renderer.grid.template.location = 0;\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      valueAxis.tooltip.disabled = true;\n      valueAxis.renderer.minWidth = 35;\n      let series = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.dateX = \"date\";\n      series.dataFields.valueY = \"value\";\n      series.tooltipText = \"{valueY.value}\";\n      chart.cursor = new am4charts.XYCursor();\n      let scrollbarX = new am4charts.XYChartScrollbar();\n      scrollbarX.series.push(series);\n      chart.scrollbarX = scrollbarX;\n      this.chart = chart;\n    };\n  }\n\n  componentDidMount() {\n    fetch(FINNHUB_STOCK_DATA_URL).then(resp => resp.json()).then(json => {\n      console.log(json);\n    });\n  } // Sample xy chart from amcharts.com for React:\n\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  } //sample api request from finnhub.io documentation\n  // const request = require('request');\n  // request('https://finnhub.io/api/v1/stock/candle?symbol=AAPL&resolution=1&from=1572651390&to=1572910590&token=bsfleivrh5rf14r5rh80', { json: true }, (err, res, body) => {\n  //   if (err) { return console.log(err); }\n  //   console.log(body.url);\n  //   console.log(body.explanation);\n  // });\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Andrew's Final Project\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Stock App\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chartdiv\",\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, this.testChart()));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/stocks-app/frontend/src/App.js"],"names":["React","am4core","am4charts","am4themes_animated","useTheme","FINNHUB_STOCK_DATA_URL","FINNHUB_API_KEY","App","Component","testChart","chart","create","XYChart","paddingRight","data","visits","i","Math","round","random","push","date","Date","name","value","console","log","dateAxis","xAxes","DateAxis","renderer","grid","template","location","valueAxis","yAxes","ValueAxis","tooltip","disabled","minWidth","series","LineSeries","dataFields","dateX","valueY","tooltipText","cursor","XYCursor","scrollbarX","XYChartScrollbar","componentDidMount","fetch","then","resp","json","componentWillUnmount","dispose","render","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n// import candlestick chart components from amcharts.com below:\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\n// from to in stock data is unix time from 6/1/20 to 6/15/20\nconst FINNHUB_STOCK_DATA_URL = 'https://finnhub.io/api/v1/stock/candle?symbol=AAPL&resolution=D&from=1590969600&to=1592179200&token=bsfleivrh5rf14r5rh80'\nconst FINNHUB_API_KEY = 'bsfleivrh5rf14r5rh80'\n\nclass App extends React.Component {\n  \n  componentDidMount() {\n    fetch(FINNHUB_STOCK_DATA_URL)\n    .then(resp => resp.json())\n    .then(json => {\n      console.log(json)\n    })\n  }\n\n    // Sample xy chart from amcharts.com for React:\n  testChart = () => {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n\n    chart.paddingRight = 20;\n\n    let data = [];\n    let visits = 10;\n    for (let i = 1; i < 366; i++) {\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n      data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\n    }\n  \n    chart.data = data;\n    console.log(chart.data)\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0;\n  \n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.renderer.minWidth = 35;\n  \n    let series = chart.series.push(new am4charts.LineSeries());\n    series.dataFields.dateX = \"date\";\n    series.dataFields.valueY = \"value\";\n  \n    series.tooltipText = \"{valueY.value}\";\n    chart.cursor = new am4charts.XYCursor();\n  \n    let scrollbarX = new am4charts.XYChartScrollbar();\n    scrollbarX.series.push(series);\n    chart.scrollbarX = scrollbarX;\n  \n    this.chart = chart;\n    \n   \n    }\n  \n    \n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n\n    //sample api request from finnhub.io documentation\n    // const request = require('request');\n\n    // request('https://finnhub.io/api/v1/stock/candle?symbol=AAPL&resolution=1&from=1572651390&to=1572910590&token=bsfleivrh5rf14r5rh80', { json: true }, (err, res, body) => {\n    //   if (err) { return console.log(err); }\n    //   console.log(body.url);\n    //   console.log(body.explanation);\n    // });\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Andrew's Final Project</h1>\n          <h2>Stock App</h2>\n        </header>\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}>\n          {this.testChart()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}