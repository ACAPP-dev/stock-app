{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/stocks-app/frontend/src/containers/WatchlistContainer.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport WatchListing from '../components/watchlist/WatchListing';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport AddWatchlist from '../components/watchlist/AddWatchlist';\nimport addWatchlist from '../actions/addWatchlist';\nimport removeWatchlist from '../actions/removeWatchlist';\nimport fetchWatchlistDetail from '../actions/fetchWatchlistDetail';\nimport WatchDetail from '../components/watchlist/WatchDetail';\nimport addCompany from '../actions/addCompany';\nimport removeCompany from '../actions/removeCompany';\nimport TickerForm from '../components/ticker/TickerForm';\nimport fetchCompany from '../actions/fetchCompany';\n\nclass WatchlistContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showAddWatchlist: false,\n      showWatchlistDetail: false,\n      showAddCompany: false,\n      currentWatchlistId: \"\",\n      redirect: false\n    };\n\n    this.addWatchlist = formData => {\n      this.setState({\n        showAddWatchlist: false\n      });\n      return this.props.addWatchlist(formData, this.props.user.id);\n    };\n\n    this.viewWatchlist = id => {\n      this.props.fetchWatchlistDetail(id, this.props.user.id);\n      this.setState({\n        showWatchlistDetail: true,\n        currentWatchlistId: id\n      });\n    };\n\n    this.hideWatchlist = () => {\n      this.setState({\n        showWatchlistDetail: false\n      });\n    };\n\n    this.removeWatchlist = id => {\n      console.log('removewatchlist in watchlistcontainer: ', id);\n      this.props.removeWatchlist(id, this.props.user.id);\n    };\n\n    this.addWatchListForm = () => {\n      this.setState({\n        showAddWatchlist: true\n      });\n    };\n\n    this.showAddStockForm = () => {\n      this.setState({\n        showAddCompany: true\n      });\n    };\n\n    this.hideAddStockForm = () => {\n      this.setState({\n        showAddCompany: false\n      });\n    };\n\n    this.addCompany = formData => {\n      console.log('add company clicked in watchlist detail');\n      this.props.addCompany(this.state.currentWatchlistId, formData.ticker, this.props.user.id);\n    };\n\n    this.viewCompany = ticker => {\n      this.setState({\n        redirect: true\n      }); // Set default chart dates of last 30 days\n\n      const startDate = new Date(new Date().setDate(new Date().getDate() - 30)).toJSON().slice(0, 10);\n      const endDate = new Date().toJSON().slice(0, 10);\n      const formData = {\n        ticker: ticker,\n        startDate: startDate,\n        endDate: endDate\n      };\n      this.props.fetchCompanyData(formData);\n    };\n\n    this.removeCompany = (watchlistId, companyId) => {\n      this.props.removeCompany(watchlistId, companyId, this.props.user.id);\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        showAddWatchlist: false\n      });\n    };\n  }\n\n  // Not needed for index - will need to get details of stocks / companies at some point\n  // getWatchlist = () => {\n  //     fetch(`/watchlists/${this.props.user.id}`)\n  //         .then(resp => resp.json())\n  //         .then(json => {\n  //             console.log(json)\n  //         })\n  // }\n  componentDidUpdate() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/company\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"watchlist-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, \"Watchlists\"), this.state.showWatchlistDetail ? /*#__PURE__*/React.createElement(WatchDetail, {\n        hideWatchlist: this.hideWatchlist,\n        watchDetail: this.props.watchlistDetail,\n        addCompany: this.showAddStockForm,\n        viewCompany: this.viewCompany,\n        removeCompany: this.removeCompany,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }) : null, this.state.showAddCompany ? /*#__PURE__*/React.createElement(TickerForm, {\n        buttonText: 'Add to Watchlist',\n        hideAddCompany: this.hideAddStockForm,\n        returnSubmit: this.addCompany,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }) : null, this.state.showAddWatchlist ? /*#__PURE__*/React.createElement(AddWatchlist, {\n        closeForm: this.closeForm,\n        returnWatchlist: this.addWatchlist,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(Button, {\n        className: \"watchlist-btn\",\n        onClick: this.addWatchListForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, \"Add Watchlist\"), /*#__PURE__*/React.createElement(WatchListing, {\n        viewWatchlist: this.viewWatchlist,\n        returnRemove: this.removeWatchlist,\n        watchlists: this.props.watchLists,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    watchLists: state.user.watchlists,\n    watchlistDetail: state.watchlists\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addWatchlist: (formData, userId) => dispatch(addWatchlist(formData, userId)),\n    removeWatchlist: (watchlistId, userId) => dispatch(removeWatchlist(watchlistId, userId)),\n    addCompany: (watchlistId, formData, userId) => dispatch(addCompany(watchlistId, formData, userId)),\n    removeCompany: (watchlistId, companyId, userId) => dispatch(removeCompany(watchlistId, companyId, userId)),\n    fetchWatchlistDetail: (watchlistId, userId) => dispatch(fetchWatchlistDetail(watchlistId, userId)),\n    fetchCompanyData: formData => dispatch(fetchCompany(formData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WatchlistContainer);","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/stocks-app/frontend/src/containers/WatchlistContainer.js"],"names":["React","Link","Button","WatchListing","connect","Redirect","AddWatchlist","addWatchlist","removeWatchlist","fetchWatchlistDetail","WatchDetail","addCompany","removeCompany","TickerForm","fetchCompany","WatchlistContainer","Component","state","showAddWatchlist","showWatchlistDetail","showAddCompany","currentWatchlistId","redirect","formData","setState","props","user","id","viewWatchlist","hideWatchlist","console","log","addWatchListForm","showAddStockForm","hideAddStockForm","ticker","viewCompany","startDate","Date","setDate","getDate","toJSON","slice","endDate","fetchCompanyData","watchlistId","companyId","closeForm","componentDidUpdate","window","scrollTo","render","watchlistDetail","watchLists","mapStateToProps","watchlists","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\nimport WatchListing from '../components/watchlist/WatchListing'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport AddWatchlist from '../components/watchlist/AddWatchlist'\nimport addWatchlist from '../actions/addWatchlist'\nimport removeWatchlist from '../actions/removeWatchlist'\nimport fetchWatchlistDetail from '../actions/fetchWatchlistDetail'\nimport WatchDetail from '../components/watchlist/WatchDetail'\nimport addCompany from '../actions/addCompany'\nimport removeCompany from '../actions/removeCompany'\nimport TickerForm from '../components/ticker/TickerForm'\nimport fetchCompany from '../actions/fetchCompany'\n\nclass WatchlistContainer extends React.Component {\n\n    state = {\n        showAddWatchlist: false,\n        showWatchlistDetail: false,\n        showAddCompany: false,\n        currentWatchlistId: \"\",\n        redirect: false\n\n    }\n\n    addWatchlist = formData => {\n        this.setState({showAddWatchlist: false})\n        return this.props.addWatchlist(formData, this.props.user.id)\n    }\n\n    viewWatchlist = id => {\n        this.props.fetchWatchlistDetail(id, this.props.user.id)\n        this.setState({showWatchlistDetail: true, currentWatchlistId: id})\n    }\n\n    hideWatchlist = () => {\n        this.setState({showWatchlistDetail: false})\n    }\n\n    removeWatchlist = (id) => {\n        console.log('removewatchlist in watchlistcontainer: ', id)\n        this.props.removeWatchlist(id, this.props.user.id)\n    }\n\n    // Not needed for index - will need to get details of stocks / companies at some point\n    // getWatchlist = () => {\n    //     fetch(`/watchlists/${this.props.user.id}`)\n    //         .then(resp => resp.json())\n    //         .then(json => {\n    //             console.log(json)\n    //         })\n    // }\n\n    componentDidUpdate() {\n        window.scrollTo(0, 0)\n    }\n\n    addWatchListForm = () => {\n        this.setState({showAddWatchlist: true})\n    }\n\n    showAddStockForm = () => {\n        this.setState({showAddCompany: true})\n    }\n\n    hideAddStockForm = () => {\n        this.setState({showAddCompany: false})\n    }\n\n    addCompany = (formData) => {\n        console.log('add company clicked in watchlist detail')\n        this.props.addCompany(this.state.currentWatchlistId, formData.ticker, this.props.user.id)\n    }\n\n    viewCompany = (ticker) => {\n        this.setState({redirect: true})\n        // Set default chart dates of last 30 days\n        const startDate = new Date(new Date().setDate(new Date().getDate() - 30)).toJSON().slice(0,10)\n        const endDate = new Date().toJSON().slice(0,10)\n        const formData = {ticker: ticker,\n            startDate: startDate,\n            endDate: endDate\n        }\n        this.props.fetchCompanyData(formData)\n    }\n\n    removeCompany = (watchlistId, companyId) => {\n        this.props.removeCompany(watchlistId, companyId, this.props.user.id)\n    }\n\n    closeForm = () => {\n        this.setState({showAddWatchlist: false})\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/company\" />\n        } else {\n            return(\n                <div className='watchlist-div'>\n                    <h2>Watchlists</h2>\n                    {this.state.showWatchlistDetail ?\n                        < WatchDetail \n                            hideWatchlist={this.hideWatchlist} \n                            watchDetail={this.props.watchlistDetail}\n                            addCompany={this.showAddStockForm}\n                            viewCompany={this.viewCompany}\n                            removeCompany={this.removeCompany}\n                        /> :\n                        null\n                    }\n                    {this.state.showAddCompany ?\n                        < TickerForm buttonText={'Add to Watchlist'} hideAddCompany={this.hideAddStockForm} returnSubmit={this.addCompany} /> : null }\n                    {this.state.showAddWatchlist ?\n                        < AddWatchlist closeForm={this.closeForm} returnWatchlist={this.addWatchlist} /> :\n                        <Button className='watchlist-btn' onClick={this.addWatchListForm}>Add Watchlist</Button>\n                    }\n                    < WatchListing \n                        viewWatchlist={this.viewWatchlist} \n                        returnRemove={this.removeWatchlist} \n                        watchlists={this.props.watchLists}\n                    />\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user, \n        watchLists: state.user.watchlists,\n        watchlistDetail: state.watchlists\n    }    \n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addWatchlist: (formData, userId) => dispatch(addWatchlist(formData, userId)),\n        removeWatchlist: (watchlistId, userId) => dispatch(removeWatchlist(watchlistId, userId)),\n        addCompany: (watchlistId, formData, userId) => dispatch(addCompany(watchlistId, formData, userId)),\n        removeCompany: (watchlistId, companyId, userId) => dispatch(removeCompany(watchlistId, companyId, userId)),\n        fetchWatchlistDetail: (watchlistId, userId) => dispatch(fetchWatchlistDetail(watchlistId, userId)),\n        fetchCompanyData: (formData) => dispatch(fetchCompany(formData))\n    }\n\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps)(WatchlistContainer)"]},"metadata":{},"sourceType":"module"}