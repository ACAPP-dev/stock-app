{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/stocks-app/frontend/src/containers/WatchlistContainer.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport WatchListing from '../components/watchlist/WatchListing';\nimport { connect } from 'react-redux';\nimport AddWatchlist from '../components/watchlist/AddWatchlist';\nimport addWatchlist from '../actions/addWatchlist';\nimport removeWatchlist from '../actions/removeWatchlist';\nimport fetchWatchlistDetail from '../actions/fetchWatchlistDetail';\nimport WatchDetail from '../components/watchlist/WatchDetail';\n\nclass WatchlistContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showAddWatchlist: false,\n      showWatchlistDetail: false\n    };\n\n    this.addWatchlist = formData => {\n      this.setState({\n        showAddWatchlist: false\n      });\n      return this.props.addWatchlist(formData, this.props.user.id);\n    };\n\n    this.viewWatchlist = id => {\n      this.props.fetchWatchlistDetail(id, this.props.user.id);\n      this.setState({\n        showWatchlistDetail: true\n      });\n    };\n\n    this.hideWatchlist = () => {\n      this.setState({\n        showWatchlistDetail: false\n      });\n    };\n\n    this.removeWatchlist = id => {\n      console.log('removewatchlist in watchlistcontainer: ', id);\n      this.props.removeWatchlist(id, this.props.user.id);\n    };\n\n    this.addWatchListForm = () => {\n      this.setState({\n        showAddWatchlist: true\n      });\n    };\n\n    this.addCompany = () => {\n      console.log('add company clicked in watchlist detail');\n    };\n\n    this.removeCompany = id => {\n      console.log('remove company clicked in watchlist detail', id);\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        showAddWatchlist: false\n      });\n    };\n  }\n\n  // Not needed for index - will need to get details of stocks / companies at some point\n  // getWatchlist = () => {\n  //     fetch(`/watchlists/${this.props.user.id}`)\n  //         .then(resp => resp.json())\n  //         .then(json => {\n  //             console.log(json)\n  //         })\n  // }\n  componentDidUpdate() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    // this.getWatchlist()\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"watchlist-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Watchlists\"), this.state.showWatchlistDetail ? /*#__PURE__*/React.createElement(WatchDetail, {\n      hideWatchlist: this.hideWatchlist,\n      watchDetail: this.props.watchlistDetail,\n      addCompany: this.addCompany,\n      removeCompany: this.removeCompany,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }) : null, this.state.showAddWatchlist ? /*#__PURE__*/React.createElement(AddWatchlist, {\n      closeForm: this.closeForm,\n      returnWatchlist: this.addWatchlist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(Button, {\n      className: \"watchlist-btn\",\n      onClick: this.addWatchListForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Add Watchlist\"), /*#__PURE__*/React.createElement(WatchListing, {\n      viewWatchlist: this.viewWatchlist,\n      returnRemove: this.removeWatchlist,\n      watchlists: this.props.watchLists,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('watchlist state:', state);\n  return {\n    user: state.user,\n    watchLists: state.user.watchlists,\n    watchlistDetail: state.watchlists\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addWatchlist: (formData, userId) => dispatch(addWatchlist(formData, userId)),\n    removeWatchlist: (id, userId) => dispatch(removeWatchlist(id, userId)),\n    fetchWatchlistDetail: (watchlistId, userId) => dispatch(fetchWatchlistDetail(watchlistId, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WatchlistContainer);","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/stocks-app/frontend/src/containers/WatchlistContainer.js"],"names":["React","Link","Button","WatchListing","connect","AddWatchlist","addWatchlist","removeWatchlist","fetchWatchlistDetail","WatchDetail","WatchlistContainer","Component","state","showAddWatchlist","showWatchlistDetail","formData","setState","props","user","id","viewWatchlist","hideWatchlist","console","log","addWatchListForm","addCompany","removeCompany","closeForm","componentDidUpdate","window","scrollTo","render","watchlistDetail","watchLists","mapStateToProps","watchlists","mapDispatchToProps","dispatch","userId","watchlistId"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\nimport WatchListing from '../components/watchlist/WatchListing'\nimport { connect } from 'react-redux'\nimport AddWatchlist from '../components/watchlist/AddWatchlist'\nimport addWatchlist from '../actions/addWatchlist'\nimport removeWatchlist from '../actions/removeWatchlist'\nimport fetchWatchlistDetail from '../actions/fetchWatchlistDetail'\nimport WatchDetail from '../components/watchlist/WatchDetail'\n\nclass WatchlistContainer extends React.Component {\n\n    state = {\n        showAddWatchlist: false,\n        showWatchlistDetail: false\n    }\n\n    addWatchlist = formData => {\n        this.setState({showAddWatchlist: false})\n        return this.props.addWatchlist(formData, this.props.user.id)\n    }\n\n    viewWatchlist = id => {\n        this.props.fetchWatchlistDetail(id, this.props.user.id)\n        this.setState({showWatchlistDetail: true})\n    }\n\n    hideWatchlist = () => {\n        this.setState({showWatchlistDetail: false})\n    }\n\n    removeWatchlist = (id) => {\n        console.log('removewatchlist in watchlistcontainer: ', id)\n        this.props.removeWatchlist(id, this.props.user.id)\n    }\n\n    // Not needed for index - will need to get details of stocks / companies at some point\n    // getWatchlist = () => {\n    //     fetch(`/watchlists/${this.props.user.id}`)\n    //         .then(resp => resp.json())\n    //         .then(json => {\n    //             console.log(json)\n    //         })\n    // }\n\n    componentDidUpdate() {\n        window.scrollTo(0, 0)\n    }\n\n    addWatchListForm = () => {\n        this.setState({showAddWatchlist: true})\n    }\n\n    addCompany = () => {\n        console.log('add company clicked in watchlist detail')\n    }\n\n    removeCompany = id => {\n        console.log('remove company clicked in watchlist detail', id)\n    }\n\n    closeForm = () => {\n        this.setState({showAddWatchlist: false})\n    }\n\n    render() {\n        // this.getWatchlist()\n\n        return(\n            <div className='watchlist-div'>\n                <h2>Watchlists</h2>\n                {this.state.showWatchlistDetail ?\n                    < WatchDetail \n                        hideWatchlist={this.hideWatchlist} \n                        watchDetail={this.props.watchlistDetail} \n                        addCompany={this.addCompany}\n                        removeCompany={this.removeCompany}\n                    /> :\n                    null\n                }\n                {this.state.showAddWatchlist ?\n                    < AddWatchlist closeForm={this.closeForm} returnWatchlist={this.addWatchlist} /> :\n                    <Button className='watchlist-btn' onClick={this.addWatchListForm}>Add Watchlist</Button>\n                }\n                < WatchListing \n                    viewWatchlist={this.viewWatchlist} \n                    returnRemove={this.removeWatchlist} \n                    watchlists={this.props.watchLists}\n                />\n                {/* <Link className='nav' to='/watchlists/new'>Add Watchlist</Link> */}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log('watchlist state:', state)\n    return {user: state.user, watchLists: state.user.watchlists,\n        watchlistDetail: state.watchlists}    \n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addWatchlist: (formData, userId) => dispatch(addWatchlist(formData, userId)),\n        removeWatchlist: (id, userId) => dispatch(removeWatchlist(id, userId)),\n        fetchWatchlistDetail: (watchlistId, userId) => dispatch(fetchWatchlistDetail(watchlistId, userId))\n    }\n\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps)(WatchlistContainer)"]},"metadata":{},"sourceType":"module"}