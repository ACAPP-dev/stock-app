{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/stocks-app/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport companyReducer from './reducers/companyReducer';\nimport dailyReducer from './reducers/dailyReducer';\nimport userReducer from './reducers/userReducer';\nimport watchlistReducer from './reducers/watchlistReducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst appReducer = combineReducers({\n  companies: companyReducer,\n  daily: dailyReducer,\n  user: userReducer,\n  watchlists: watchlistReducer\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'LOGOUT') {\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/stocks-app/frontend/src/index.js"],"names":["React","ReactDOM","createStore","applyMiddleware","combineReducers","Provider","thunk","companyReducer","dailyReducer","userReducer","watchlistReducer","App","serviceWorker","appReducer","companies","daily","user","watchlists","rootReducer","state","action","type","undefined","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,UAAU,GAAGT,eAAe,CAAC;AACjCU,EAAAA,SAAS,EAAEP,cADsB;AAEjCQ,EAAAA,KAAK,EAAEP,YAF0B;AAGjCQ,EAAAA,IAAI,EAAEP,WAH2B;AAIjCQ,EAAAA,UAAU,EAAEP;AAJqB,CAAD,CAAlC;;AAOA,MAAMQ,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAAEF,IAAAA,KAAK,GAAGG,SAAR;AAAkB;;AAClD,SAAOT,UAAU,CAACM,KAAD,EAAQC,MAAR,CAAjB;AACD,CAHD;;AAKA,MAAMG,KAAK,GAAGrB,WAAW,CAACgB,WAAD,EAAcf,eAAe,CAACG,KAAD,CAA7B,CAAzB;AAEAL,QAAQ,CAACuB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAd,aAAa,CAACe,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport companyReducer from './reducers/companyReducer'\nimport dailyReducer from './reducers/dailyReducer'\nimport userReducer from './reducers/userReducer'\nimport watchlistReducer from './reducers/watchlistReducer'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst appReducer = combineReducers({\n  companies: companyReducer,\n  daily: dailyReducer,\n  user: userReducer,\n  watchlists: watchlistReducer\n})\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'LOGOUT') { state = undefined}\n  return appReducer(state, action)\n}\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}