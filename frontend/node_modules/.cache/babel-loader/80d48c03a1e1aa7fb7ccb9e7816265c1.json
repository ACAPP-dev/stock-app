{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/stocks-app/frontend/src/components/ticker/TickerForm.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport TickerList from './TickerList';\nimport { connect } from 'react-redux';\nimport { getDistance } from '@amcharts/amcharts4/.internal/core/utils/Math';\n\nclass TickerForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: \"\",\n      ticker: \"AAPL\",\n      startDate: \"\",\n      endDate: new Date(Date.now()).toLocaleString().split(',')[0],\n      tickers: []\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value.toUpperCase()\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.returnSubmit(this.state.ticker);\n    };\n\n    this.updateTicker = ticker => {\n      this.setState({\n        ticker: ticker\n      });\n    };\n\n    this.returnTickers = () => {\n      if (this.state.searchText) {\n        const tickerList = this.state.tickers.filter(ticker => {\n          const matchText = new RegExp(this.state.searchText, \"gi\");\n          return ticker.ticker_name.match(matchText);\n        });\n        return /*#__PURE__*/React.createElement(TickerList, {\n          returnTicker: this.updateTicker,\n          tickers: tickerList.slice(0, 5),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.dateToString = date => {\n      console.log(date, typeof date); // const dateString = date.getMonth() + '-' + date.getDistance() + '-' + date.getFullYear()\n      // console.log(dateString)\n      // return dateString\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/tickers').then(resp => resp.json()).then(json => this.setState({\n      tickers: json\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Enter Company Name to Search for Ticker\"), /*#__PURE__*/React.createElement(Form, {\n      className: \"login-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Company Name to Search:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.handleChange,\n      name: \"searchText\",\n      value: this.state.searchText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"Enter company name to search for ticker\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, this.returnTickers()), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"or Enter Ticker\"), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Ticker:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.handleChange,\n      name: \"ticker\",\n      value: this.state.ticker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, \"Enter ticker to get stock data\")), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Date Range:\"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, \"Start Date:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      onChange: this.handleChange,\n      name: \"startDate\",\n      placeholder: new Date(Date.now() - 30).toLocaleString().split(',')[0],\n      value: this.state.startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, \"Start Date for Chart\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, \"End Date:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      onChange: this.handleChange,\n      name: \"endDate\",\n      placeholder: new Date(Date.now()).toLocaleString().split(',')[0],\n      value: this.state.endDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, \"End Date for Chart\")))), /*#__PURE__*/React.createElement(Button, {\n      className: \"watchlist-btn\",\n      variant: \"dark\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, this.props.buttonText), this.props.hideAddCompany ? /*#__PURE__*/React.createElement(Button, {\n      onClick: this.props.hideAddCompany,\n      className: \"watchlist-btn\",\n      variant: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, \"Close Form\") : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('props in tickerform: ', state);\n  return state;\n};\n\nexport default connect(mapStateToProps)(TickerForm);","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/stocks-app/frontend/src/components/ticker/TickerForm.js"],"names":["React","Form","Button","Row","Col","TickerList","connect","getDistance","TickerForm","Component","state","searchText","ticker","startDate","endDate","Date","now","toLocaleString","split","tickers","handleChange","event","setState","target","name","value","toUpperCase","handleSubmit","preventDefault","props","returnSubmit","updateTicker","returnTickers","tickerList","filter","matchText","RegExp","ticker_name","match","slice","dateToString","date","console","log","componentDidMount","fetch","then","resp","json","render","buttonText","hideAddCompany","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport TickerList from './TickerList'\nimport { connect } from 'react-redux'\nimport { getDistance } from '@amcharts/amcharts4/.internal/core/utils/Math'\n\nclass TickerForm extends React.Component {\n\n    \n    state = {\n        searchText: \"\",\n        ticker: \"AAPL\",\n        startDate: \"\",\n        endDate: new Date(Date.now()).toLocaleString().split(',')[0],\n        tickers: []\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/tickers')\n        .then(resp => resp.json())\n        .then(json => this.setState({tickers: json}))\n    }\n\n    handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value.toUpperCase()})\n        \n    }\n    \n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.returnSubmit(this.state.ticker)\n\n    }\n    \n    updateTicker = (ticker) => {\n        this.setState({ticker: ticker})\n    }\n\n    returnTickers = () => {\n        \n        if (this.state.searchText) {\n            const tickerList = this.state.tickers.filter(ticker => {\n                const matchText = new RegExp(this.state.searchText, \"gi\")\n                return ticker.ticker_name.match(matchText)\n            })\n            \n            return < TickerList returnTicker={this.updateTicker} tickers={tickerList.slice(0, 5)} />\n        }\n    }\n\n    dateToString = date => {\n        console.log(date, typeof(date))\n\n        // const dateString = date.getMonth() + '-' + date.getDistance() + '-' + date.getFullYear()\n        // console.log(dateString)\n\n        // return dateString\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Enter Company Name to Search for Ticker</h2>\n                <Form className='login-form' onSubmit={this.handleSubmit}>\n                    <Form.Group >\n                        <Form.Label>Company Name to Search:</Form.Label>\n                        <Form.Control type='text' onChange={this.handleChange} name='searchText' value={this.state.searchText} />\n                            <Form.Text className='text-muted'>\n                                Enter company name to search for ticker\n                            </Form.Text>\n                        </Form.Group>\n                        <div>\n                            {this.returnTickers()}\n                        </div>\n                        \n                        <h2>or Enter Ticker</h2>\n                        <Form.Group >\n                        <Form.Label>Ticker:</Form.Label>\n                        <Form.Control type='text' onChange={this.handleChange} name='ticker' value={this.state.ticker} />\n                            <Form.Text className='text-muted'>\n                                Enter ticker to get stock data\n                            </Form.Text>\n                        </Form.Group>\n                        <Form.Group >\n                            <Form.Label>Date Range:</Form.Label>\n                            <Row>\n                            <Col>\n                                <Form.Label>Start Date:</Form.Label>\n                                <Form.Control type=\"date\" onChange={this.handleChange} name='startDate' placeholder={new Date(Date.now()-30).toLocaleString().split(',')[0]} value={this.state.startDate} />\n                                <Form.Text className='text-muted'>\n                                    Start Date for Chart\n                                </Form.Text>\n                            </Col>\n                            <Col>\n                            <Form.Label>End Date:</Form.Label>\n                                <Form.Control type=\"date\" onChange={this.handleChange} name='endDate' placeholder={new Date(Date.now()).toLocaleString().split(',')[0]} value={this.state.endDate} />\n                                <Form.Text className='text-muted'>\n                                    End Date for Chart\n                                </Form.Text>\n                            </Col>\n                            </Row>\n                        </Form.Group>\n                        \n                        <Button className='watchlist-btn' variant=\"dark\" type=\"submit\">\n                            {this.props.buttonText}\n                        </Button>\n                        {this.props.hideAddCompany ? \n                            <Button \n                                onClick={this.props.hideAddCompany}\n                                className='watchlist-btn' variant=\"light\" >\n                                Close Form\n                            </Button> : null\n                        }\n                    </Form>\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log('props in tickerform: ', state)\n    return state\n}\n\nexport default connect(mapStateToProps)(TickerForm)\n"]},"metadata":{},"sourceType":"module"}