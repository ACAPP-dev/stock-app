{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/stocks-app/frontend/src/components/daily/DailyForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass DailyForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      watchlistId: '',\n      watchlistName: 'Select',\n      startDate: new Date(new Date().setDate(new Date().getDate() - 2)).toJSON().slice(0, 10),\n      chartStartDate: new Date(new Date().setDate(new Date().getDate() - 3)).toJSON().slice(0, 10),\n      endDate: new Date().toJSON().slice(0, 10),\n      chartEndDate: new Date(new Date().setDate(new Date().getDate() + 1)).toJSON().slice(0, 10)\n    };\n\n    this.convertStringToDate = date => {\n      return new Date(date);\n    };\n\n    this.getWeekdayStartDate = date => {\n      if (date.getDay() === 0) {\n        return date.setDate(new Date(date).getDate() - 2);\n      } else if (date.getDay() === 6) {\n        return date.setDate(new Date(date).getDate() - 1);\n      }\n    };\n\n    this.getWeekdayEndDate = date => {\n      if (date.getDay() === 0) {\n        return date.setDate(new Date(date).getDate() + 1);\n      } else if (date.getDay() === 6) {\n        return date.setDate(new Date(date).getDate() + 2);\n      }\n    };\n\n    this.handleChange = event => {\n      debugger;\n\n      if (event.target.name === 'startDate') {\n        const newEndDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() + 2)).toJSON().slice(0, 10);\n        const newChartEndDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() + 3)).toJSON().slice(0, 10);\n        const newChartStartDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() - 1)).toJSON().slice(0, 10);\n        this.setState({\n          startDate: event.target.value,\n          chartStartDate: newChartStartDate,\n          endDate: newEndDate,\n          chartEndDate: newChartEndDate\n        });\n      } else if (event.target.name === 'endDate') {\n        const newStartDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() - 2)).toJSON().slice(0, 10);\n        const newChartStartDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() - 3)).toJSON().slice(0, 10);\n        const newChartEndDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() + 1)).toJSON().slice(0, 10);\n        this.setState({\n          startDate: newStartDate,\n          endDate: event.target.value,\n          chartStartDate: newChartStartDate,\n          chartEndDate: newChartEndDate\n        });\n      }\n\n      console.log('setstate in daily form: ', this.state);\n    };\n\n    this.dropdownSelect = (id, name) => {\n      this.setState({\n        watchlistId: id,\n        watchlistName: name\n      });\n    };\n\n    this.returnSubmit = event => {\n      event.preventDefault();\n      this.props.returnGetData(this.state);\n    };\n\n    this.selectWatchlist = () => {\n      return /*#__PURE__*/React.createElement(DropdownButton, {\n        title: 'Watchlist: ' + this.state.watchlistName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, this.props.user.watchlists.map(watchlist => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          key: watchlist.id,\n          onClick: () => this.dropdownSelect(watchlist.id, watchlist.name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }\n        }, watchlist.name);\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"daily-form-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.returnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, this.selectWatchlist()), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \"Start Date:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      onChange: this.handleChange,\n      name: \"startDate\",\n      value: this.state.startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \"Start Date for View\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"End Date:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      onChange: this.handleChange,\n      name: \"endDate\",\n      value: this.state.endDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, \"End Date for View (3 Days Max)\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 26\n      }\n    }, \"Get Data\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('state in daily form: ', state);\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(DailyForm);","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/stocks-app/frontend/src/components/daily/DailyForm.js"],"names":["React","connect","Form","Dropdown","DropdownButton","Button","Row","Col","DailyForm","Component","state","watchlistId","watchlistName","startDate","Date","setDate","getDate","toJSON","slice","chartStartDate","endDate","chartEndDate","convertStringToDate","date","getWeekdayStartDate","getDay","getWeekdayEndDate","handleChange","event","target","name","newEndDate","value","newChartEndDate","newChartStartDate","setState","newStartDate","console","log","dropdownSelect","id","returnSubmit","preventDefault","props","returnGetData","selectWatchlist","user","watchlists","map","watchlist","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Form from 'react-bootstrap/Form'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass DailyForm extends React.Component {\n\n    state = {\n        watchlistId: '',\n        watchlistName: 'Select',\n        startDate: new Date(new Date().setDate(new Date().getDate() - 2)).toJSON().slice(0,10),\n        chartStartDate: new Date(new Date().setDate(new Date().getDate() - 3)).toJSON().slice(0,10),\n        endDate: new Date().toJSON().slice(0,10),\n        chartEndDate: new Date(new Date().setDate(new Date().getDate() +1)).toJSON().slice(0,10)\n    }\n\n    convertStringToDate = date => {\n        return new Date(date)\n    }\n\n    getWeekdayStartDate = date => {\n        if (date.getDay() === 0) {\n            return date.setDate(new Date(date).getDate() - 2)\n        } else if (date.getDay() === 6) {\n            return date.setDate(new Date(date).getDate() - 1)\n        }\n    }\n\n    getWeekdayEndDate = date => {\n        if (date.getDay() === 0) {\n            return date.setDate(new Date(date).getDate() + 1)\n        } else if (date.getDay() === 6) {\n            return date.setDate(new Date(date).getDate() + 2)\n        }\n    }\n    \n    handleChange = event => {\n        debugger\n        if (event.target.name === 'startDate') {\n            const newEndDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() + 2)).toJSON().slice(0,10)\n            const newChartEndDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() + 3)).toJSON().slice(0,10)\n            const newChartStartDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() - 1)).toJSON().slice(0,10)\n            this.setState({\n                startDate: event.target.value,\n                chartStartDate: newChartStartDate,\n                endDate: newEndDate,\n                chartEndDate: newChartEndDate\n            })\n        } else if (event.target.name === 'endDate') {\n            const newStartDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() - 2)).toJSON().slice(0,10)\n            const newChartStartDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() - 3)).toJSON().slice(0,10)\n            const newChartEndDate = new Date(new Date(event.target.value).setDate(new Date(event.target.value).getDate() + 1)).toJSON().slice(0,10)\n            this.setState({\n                startDate: newStartDate,\n                endDate: event.target.value,\n                chartStartDate: newChartStartDate,\n                chartEndDate: newChartEndDate\n            })\n        } \n        console.log('setstate in daily form: ', this.state)\n    }\n\n    dropdownSelect = (id, name) => {\n        this.setState({\n            watchlistId: id,\n            watchlistName: name\n        })\n    }\n\n    returnSubmit = event => {\n        event.preventDefault()\n        this.props.returnGetData(this.state)\n\n    }\n\n    \n    selectWatchlist = () => {\n        \n            return (\n                <DropdownButton \n                    title={'Watchlist: ' + this.state.watchlistName}\n                    \n                    >\n                    {this.props.user.watchlists.map(watchlist => {\n                        return (\n                            <Dropdown.Item \n                                key={watchlist.id}\n                                onClick={()=>this.dropdownSelect(watchlist.id, watchlist.name)}\n                            >{watchlist.name}</Dropdown.Item>\n                        )\n                    })}    \n                </DropdownButton>\n            )\n        }\n\n    render() {\n    return (\n        <div className='daily-form-div'>\n                \n        <Form onSubmit={this.returnSubmit}>\n            \n            \n            <Form.Group >\n                <Row >\n                    <Col>{this.selectWatchlist()}</Col>    \n                    <Col>\n                        <Form.Label>Start Date:</Form.Label>\n                        <Form.Control type=\"date\" onChange={this.handleChange} name='startDate' value={this.state.startDate} />\n                        <Form.Text className='text-muted'>\n                            Start Date for View\n                        </Form.Text>\n                    </Col>\n                    <Col>\n                    <Form.Label>End Date:</Form.Label>\n                        <Form.Control type=\"date\" onChange={this.handleChange} name='endDate' value={this.state.endDate} />\n                        <Form.Text className='text-muted'>\n                            End Date for View (3 Days Max)\n                        </Form.Text>\n                    </Col>\n                    <Col><Button variant='success' type='submit'>Get Data</Button></Col>\n                </Row>\n            </Form.Group>\n            </Form>\n            </div>\n    )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log('state in daily form: ', state)\n    return {user: state.user}\n}\nexport default connect(mapStateToProps)(DailyForm)"]},"metadata":{},"sourceType":"module"}