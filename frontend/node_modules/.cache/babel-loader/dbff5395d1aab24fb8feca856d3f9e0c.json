{"ast":null,"code":"var _jsxFileName = \"/Users/acapp5K1/Desktop/stocks-app/frontend/src/containers/WatchlistContainer.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport WatchListing from '../components/watchlist/WatchListing';\nimport { connect } from 'react-redux';\nimport AddWatchlist from '../components/watchlist/AddWatchlist';\nimport addWatchlist from '../actions/addWatchlist';\nimport removeWatchlist from '../actions/removeWatchlist';\nimport fetchWatchlistDetail from '../actions/fetchWatchlistDetail';\nimport WatchDetail from '../components/watchlist/WatchDetail';\nimport addCompany from '../actions/addCompany';\nimport removeCompany from '../actions/removeCompany';\nimport TickerForm from '../components/ticker/TickerForm';\nimport fetchCompany from '../actions/fetchCompany';\n\nclass WatchlistContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showAddWatchlist: false,\n      showWatchlistDetail: false,\n      showAddCompany: false,\n      currentWatchlistId: \"\"\n    };\n\n    this.addWatchlist = formData => {\n      this.setState({\n        showAddWatchlist: false\n      });\n      return this.props.addWatchlist(formData, this.props.user.id);\n    };\n\n    this.viewWatchlist = id => {\n      this.props.fetchWatchlistDetail(id, this.props.user.id);\n      this.setState({\n        showWatchlistDetail: true,\n        currentWatchlistId: id\n      });\n    };\n\n    this.hideWatchlist = () => {\n      this.setState({\n        showWatchlistDetail: false\n      });\n    };\n\n    this.removeWatchlist = id => {\n      console.log('removewatchlist in watchlistcontainer: ', id);\n      this.props.removeWatchlist(id, this.props.user.id);\n    };\n\n    this.addWatchListForm = () => {\n      this.setState({\n        showAddWatchlist: true\n      });\n    };\n\n    this.showAddStockForm = () => {\n      this.setState({\n        showAddCompany: true\n      });\n    };\n\n    this.hideAddStockForm = () => {\n      this.setState({\n        showAddCompany: false\n      });\n    };\n\n    this.addCompany = formData => {\n      console.log('add company clicked in watchlist detail');\n      this.props.addCompany(this.state.currentWatchlistId, formData, this.props.user.id);\n    };\n\n    this.viewCompany = ticker => {\n      debugger;\n    };\n\n    this.removeCompany = (watchlistId, companyId) => {\n      console.log('remove company clicked in watchlist detail', watchlistId, companyId);\n      this.props.removeCompany(watchlistId, companyId, this.props.user.id);\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        showAddWatchlist: false\n      });\n    };\n  }\n\n  // Not needed for index - will need to get details of stocks / companies at some point\n  // getWatchlist = () => {\n  //     fetch(`/watchlists/${this.props.user.id}`)\n  //         .then(resp => resp.json())\n  //         .then(json => {\n  //             console.log(json)\n  //         })\n  // }\n  componentDidUpdate() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    // this.getWatchlist()\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"watchlist-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Watchlists\"), this.state.showWatchlistDetail ? /*#__PURE__*/React.createElement(WatchDetail, {\n      hideWatchlist: this.hideWatchlist,\n      watchDetail: this.props.watchlistDetail,\n      addCompany: this.showAddStockForm,\n      viewCompany: this.viewCompany,\n      removeCompany: this.removeCompany,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }) : null, this.state.showAddCompany ? /*#__PURE__*/React.createElement(TickerForm, {\n      buttonText: 'Add to Watchlist',\n      hideAddCompany: this.hideAddStockForm,\n      returnSubmit: this.addCompany,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }) : null, this.state.showAddWatchlist ? /*#__PURE__*/React.createElement(AddWatchlist, {\n      closeForm: this.closeForm,\n      returnWatchlist: this.addWatchlist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(Button, {\n      className: \"watchlist-btn\",\n      onClick: this.addWatchListForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"Add Watchlist\"), /*#__PURE__*/React.createElement(WatchListing, {\n      viewWatchlist: this.viewWatchlist,\n      returnRemove: this.removeWatchlist,\n      watchlists: this.props.watchLists,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('watchlist state:', state);\n  return {\n    user: state.user,\n    watchLists: state.user.watchlists,\n    watchlistDetail: state.watchlists\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addWatchlist: (formData, userId) => dispatch(addWatchlist(formData, userId)),\n    removeWatchlist: (watchlistId, userId) => dispatch(removeWatchlist(watchlistId, userId)),\n    addCompany: (watchlistId, formData, userId) => dispatch(addCompany(watchlistId, formData, userId)),\n    removeCompany: (watchlistId, companyId, userId) => dispatch(removeCompany(watchlistId, companyId, userId)),\n    fetchWatchlistDetail: (watchlistId, userId) => dispatch(fetchWatchlistDetail(watchlistId, userId)),\n    fetchCompanyData: ticker => dispatch(fetchCompany(ticker))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WatchlistContainer);","map":{"version":3,"sources":["/Users/acapp5K1/Desktop/stocks-app/frontend/src/containers/WatchlistContainer.js"],"names":["React","Link","Button","WatchListing","connect","AddWatchlist","addWatchlist","removeWatchlist","fetchWatchlistDetail","WatchDetail","addCompany","removeCompany","TickerForm","fetchCompany","WatchlistContainer","Component","state","showAddWatchlist","showWatchlistDetail","showAddCompany","currentWatchlistId","formData","setState","props","user","id","viewWatchlist","hideWatchlist","console","log","addWatchListForm","showAddStockForm","hideAddStockForm","viewCompany","ticker","watchlistId","companyId","closeForm","componentDidUpdate","window","scrollTo","render","watchlistDetail","watchLists","mapStateToProps","watchlists","mapDispatchToProps","dispatch","userId","fetchCompanyData"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\nimport WatchListing from '../components/watchlist/WatchListing'\nimport { connect } from 'react-redux'\nimport AddWatchlist from '../components/watchlist/AddWatchlist'\nimport addWatchlist from '../actions/addWatchlist'\nimport removeWatchlist from '../actions/removeWatchlist'\nimport fetchWatchlistDetail from '../actions/fetchWatchlistDetail'\nimport WatchDetail from '../components/watchlist/WatchDetail'\nimport addCompany from '../actions/addCompany'\nimport removeCompany from '../actions/removeCompany'\nimport TickerForm from '../components/ticker/TickerForm'\nimport fetchCompany from '../actions/fetchCompany'\n\nclass WatchlistContainer extends React.Component {\n\n    state = {\n        showAddWatchlist: false,\n        showWatchlistDetail: false,\n        showAddCompany: false,\n        currentWatchlistId: \"\"\n\n    }\n\n    addWatchlist = formData => {\n        this.setState({showAddWatchlist: false})\n        return this.props.addWatchlist(formData, this.props.user.id)\n    }\n\n    viewWatchlist = id => {\n        this.props.fetchWatchlistDetail(id, this.props.user.id)\n        this.setState({showWatchlistDetail: true, currentWatchlistId: id})\n    }\n\n    hideWatchlist = () => {\n        this.setState({showWatchlistDetail: false})\n    }\n\n    removeWatchlist = (id) => {\n        console.log('removewatchlist in watchlistcontainer: ', id)\n        this.props.removeWatchlist(id, this.props.user.id)\n    }\n\n    // Not needed for index - will need to get details of stocks / companies at some point\n    // getWatchlist = () => {\n    //     fetch(`/watchlists/${this.props.user.id}`)\n    //         .then(resp => resp.json())\n    //         .then(json => {\n    //             console.log(json)\n    //         })\n    // }\n\n    componentDidUpdate() {\n        window.scrollTo(0, 0)\n    }\n\n    addWatchListForm = () => {\n        this.setState({showAddWatchlist: true})\n    }\n\n    showAddStockForm = () => {\n        this.setState({showAddCompany: true})\n    }\n\n    hideAddStockForm = () => {\n        this.setState({showAddCompany: false})\n    }\n\n    addCompany = (formData) => {\n        console.log('add company clicked in watchlist detail')\n        this.props.addCompany(this.state.currentWatchlistId, formData, this.props.user.id)\n    }\n\n    viewCompany = (ticker) => {\n        debugger\n    }\n\n    removeCompany = (watchlistId, companyId) => {\n        console.log('remove company clicked in watchlist detail', watchlistId, companyId)\n        this.props.removeCompany(watchlistId, companyId, this.props.user.id)\n    }\n\n    closeForm = () => {\n        this.setState({showAddWatchlist: false})\n    }\n\n    render() {\n        // this.getWatchlist()\n\n        return(\n            <div className='watchlist-div'>\n                <h2>Watchlists</h2>\n                {this.state.showWatchlistDetail ?\n                    < WatchDetail \n                        hideWatchlist={this.hideWatchlist} \n                        watchDetail={this.props.watchlistDetail} \n                        addCompany={this.showAddStockForm}\n                        viewCompany={this.viewCompany}\n                        removeCompany={this.removeCompany}\n                    /> :\n                    null\n                }\n                {this.state.showAddCompany ?\n                    < TickerForm buttonText={'Add to Watchlist'} hideAddCompany={this.hideAddStockForm} returnSubmit={this.addCompany} /> : null }\n                {this.state.showAddWatchlist ?\n                    < AddWatchlist closeForm={this.closeForm} returnWatchlist={this.addWatchlist} /> :\n                    <Button className='watchlist-btn' onClick={this.addWatchListForm}>Add Watchlist</Button>\n                }\n                < WatchListing \n                    viewWatchlist={this.viewWatchlist} \n                    returnRemove={this.removeWatchlist} \n                    watchlists={this.props.watchLists}\n                />\n                {/* <Link className='nav' to='/watchlists/new'>Add Watchlist</Link> */}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log('watchlist state:', state)\n    return {user: state.user, watchLists: state.user.watchlists,\n        watchlistDetail: state.watchlists}    \n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addWatchlist: (formData, userId) => dispatch(addWatchlist(formData, userId)),\n        removeWatchlist: (watchlistId, userId) => dispatch(removeWatchlist(watchlistId, userId)),\n        addCompany: (watchlistId, formData, userId) => dispatch(addCompany(watchlistId, formData, userId)),\n        removeCompany: (watchlistId, companyId, userId) => dispatch(removeCompany(watchlistId, companyId, userId)),\n        fetchWatchlistDetail: (watchlistId, userId) => dispatch(fetchWatchlistDetail(watchlistId, userId)),\n        fetchCompanyData: (ticker) => dispatch(fetchCompany(ticker))\n    }\n\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps)(WatchlistContainer)"]},"metadata":{},"sourceType":"module"}